Index: usbSerialExamples/src/main/java/com/hoho/android/usbserial/examples/DevicesFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.hoho.android.usbserial.examples;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.hardware.usb.UsbDevice;\r\nimport android.hardware.usb.UsbManager;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.ListFragment;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.hoho.android.usbserial.driver.UsbSerialDriver;\r\nimport com.hoho.android.usbserial.driver.UsbSerialProber;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Locale;\r\n\r\npublic class DevicesFragment extends ListFragment {\r\n\r\n    static class ListItem {\r\n        UsbDevice device;\r\n        int port;\r\n        UsbSerialDriver driver;\r\n\r\n        ListItem(UsbDevice device, int port, UsbSerialDriver driver) {\r\n            this.device = device;\r\n            this.port = port;\r\n            this.driver = driver;\r\n        }\r\n    }\r\n\r\n    private final ArrayList<ListItem> listItems = new ArrayList<>();\r\n    private ArrayAdapter<ListItem> listAdapter;\r\n    private int baudRate = 230400;//TODO: check for baud rate for different devices\r\n    private boolean withIoManager = true;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setHasOptionsMenu(true);\r\n        listAdapter = new ArrayAdapter<ListItem>(getActivity(), 0, listItems) {\r\n            @NonNull\r\n            @Override\r\n            public View getView(int position, View view, @NonNull ViewGroup parent) {\r\n                ListItem item = listItems.get(position);\r\n                if (view == null)\r\n                    view = getActivity().getLayoutInflater().inflate(R.layout.device_list_item, parent, false);\r\n                TextView text1 = view.findViewById(R.id.text1);\r\n                TextView text2 = view.findViewById(R.id.text2);\r\n                if(item.driver == null)\r\n                    text1.setText(\"<no driver>\");\r\n                else if(item.driver.getPorts().size() == 1)\r\n                    text1.setText(item.driver.getClass().getSimpleName().replace(\"SerialDriver\",\"\"));\r\n                else\r\n                    text1.setText(item.driver.getClass().getSimpleName().replace(\"SerialDriver\",\"\")+\", Port \"+item.port);\r\n                text2.setText(String.format(Locale.US, \"Vendor %04X, Product %04X\", item.device.getVendorId(), item.device.getProductId()));\r\n                return view;\r\n            }\r\n        };\r\n    }\r\n\r\n    @Override\r\n    public void onActivityCreated(Bundle savedInstanceState) {\r\n        super.onActivityCreated(savedInstanceState);\r\n        setListAdapter(null);\r\n        View header = getActivity().getLayoutInflater().inflate(R.layout.device_list_header, null, false);\r\n        getListView().addHeaderView(header, null, false);\r\n        setEmptyText(\"<no USB devices found>\");\r\n        ((TextView) getListView().getEmptyView()).setTextSize(18);\r\n        setListAdapter(listAdapter);\r\n    }\r\n\r\n    @Override\r\n    public void onCreateOptionsMenu(@NonNull Menu menu, MenuInflater inflater) {\r\n        inflater.inflate(R.menu.menu_devices, menu);\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        refresh();\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        int id = item.getItemId();\r\n        if(id == R.id.refresh) {\r\n            refresh();\r\n            return true;\r\n        } else if (id ==R.id.baud_rate) {\r\n            final String[] values = getResources().getStringArray(R.array.baud_rates);\r\n            int pos = java.util.Arrays.asList(values).indexOf(String.valueOf(baudRate));\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n            builder.setTitle(\"Baud rate\");\r\n            builder.setSingleChoiceItems(values, pos, (dialog, which) -> {\r\n                baudRate = Integer.parseInt(values[which]);\r\n                dialog.dismiss();\r\n            });\r\n            builder.create().show();\r\n            return true;\r\n        } else if (id ==R.id.read_mode) {\r\n            final String[] values = getResources().getStringArray(R.array.read_modes);\r\n            int pos = withIoManager ? 0 : 1; // read_modes[0]=event/io-manager, read_modes[1]=direct\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n            builder.setTitle(\"Read mode\");\r\n            builder.setSingleChoiceItems(values, pos, (dialog, which) -> {\r\n                withIoManager = (which == 0);\r\n                dialog.dismiss();\r\n            });\r\n            builder.create().show();\r\n            return true;\r\n        } else {\r\n            return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    void refresh() {\r\n        UsbManager usbManager = (UsbManager) getActivity().getSystemService(Context.USB_SERVICE);\r\n        UsbSerialProber usbDefaultProber = UsbSerialProber.getDefaultProber();\r\n        UsbSerialProber usbCustomProber = CustomProber.getCustomProber();\r\n        listItems.clear();\r\n        for(UsbDevice device : usbManager.getDeviceList().values()) {\r\n            UsbSerialDriver driver = usbDefaultProber.probeDevice(device);\r\n            if(driver == null) {\r\n                driver = usbCustomProber.probeDevice(device);\r\n            }\r\n            if(driver != null) {\r\n                for(int port = 0; port < driver.getPorts().size(); port++)\r\n                    listItems.add(new ListItem(device, port, driver));\r\n            } else {\r\n                listItems.add(new ListItem(device, 0, null));\r\n            }\r\n        }\r\n        listAdapter.notifyDataSetChanged();\r\n    }\r\n\r\n    @Override\r\n    public void onListItemClick(@NonNull ListView l, @NonNull View v, int position, long id) {\r\n        ListItem item = listItems.get(position-1);\r\n        if(item.driver == null) {\r\n            Toast.makeText(getActivity(), \"no driver\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            Bundle args = new Bundle();\r\n            args.putInt(\"device\", item.device.getDeviceId());\r\n            args.putInt(\"port\", item.port);\r\n            args.putInt(\"baud\", baudRate);\r\n            args.putBoolean(\"withIoManager\", withIoManager);\r\n            Fragment fragment = new TerminalFragment();\r\n            fragment.setArguments(args);\r\n            getFragmentManager().beginTransaction().replace(R.id.fragment, fragment, \"terminal\").addToBackStack(null).commit();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/usbSerialExamples/src/main/java/com/hoho/android/usbserial/examples/DevicesFragment.java b/usbSerialExamples/src/main/java/com/hoho/android/usbserial/examples/DevicesFragment.java
--- a/usbSerialExamples/src/main/java/com/hoho/android/usbserial/examples/DevicesFragment.java	(revision 584d089195f1d23a4b4c28aee7706300e986a672)
+++ b/usbSerialExamples/src/main/java/com/hoho/android/usbserial/examples/DevicesFragment.java	(date 1653573128166)
@@ -41,7 +41,7 @@
 
     private final ArrayList<ListItem> listItems = new ArrayList<>();
     private ArrayAdapter<ListItem> listAdapter;
-    private int baudRate = 230400;//TODO: check for baud rate for different devices
+    private int baudRate = 115200;//TODO: check for baud rate for different devices
     private boolean withIoManager = true;
 
     @Override
